name: Build ZMK firmware (local)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build per-board
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: ["tstk_tl6tn9_left", "tstk_tl6tn9_right"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install west and build deps
        run: |
          python -m pip install --upgrade pip
          # Install west and zephyr from upstream to ensure 'west build' command is available
          pip install --upgrade git+https://github.com/zephyrproject-rtos/west.git
          pip install --upgrade git+https://github.com/zephyrproject-rtos/zephyr.git || true
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake ninja-build zip
      - name: Initialize west
        run: |
          if [ -f west.yml ]; then
            echo 'Found local west.yml, using west init -l .'
            west init -l . || true
          else
            echo 'No local west.yml, attempting west init -m https://github.com/zmkfirmware/zmk'
            if west init -m https://github.com/zmkfirmware/zmk .; then
              echo 'west init -m succeeded'
            else
              echo 'west init -m failed; attempting fallback: download raw west.yml and retry'
              mkdir -p /tmp/west-manifest
              if curl -fsSL -o /tmp/west-manifest/west.yml https://raw.githubusercontent.com/zmkfirmware/zmk/main/west.yml; then
                ls -la /tmp/west-manifest || true
                west init -m /tmp/west-manifest/west.yml . || true
              else
                echo 'Fallback manifest download failed; continuing to west update (may fail)'
              fi
            fi
          fi
          west update || true

      - name: Install Zephyr Python requirements and verify west
        run: |
          if [ -d zephyr ]; then
            python -m pip install --upgrade pip
            if [ -f zephyr/scripts/requirements-base.txt ]; then
              pip install -r zephyr/scripts/requirements-base.txt || true
            fi
            if [ -f zephyr/scripts/requirements.txt ]; then
              pip install -r zephyr/scripts/requirements.txt || true
            fi
          fi
          echo '--- west version and commands (after init/update) ---'
          west --version || true
          export ZEPHYR_BASE=$(pwd)/zephyr
          echo "ZEPHYR_BASE=$ZEPHYR_BASE"
          west help || true

      - name: Debug west and workspace
        run: |
          echo '--- debug: which/pip show/freeze ---'
          which west || true
          python -m pip show west || true
          python -m pip show zephyr || true
          echo '--- pip freeze (top 200 lines) ---'
          python -m pip freeze | head -n 200 || true
          echo '--- .west and zephyr tree ---'
          ls -la .west || true
          if [ -d zephyr ]; then
            ls -la zephyr || true
            ls -la zephyr/scripts || true
          fi
          if [ -f .west/manifest.yml ]; then
            echo '--- .west/manifest.yml ---'; cat .west/manifest.yml || true
          fi
          echo '--- west list/config/topdir ---'
          west list || true
          west config || true
          west topdir || true

      - name: Initialize west
        run: |
          # Initialize west using upstream ZMK manifest if no local west.yml exists
          if [ -f west.yml ] || [ -f config/west.yml ]; then
            west init -l . || true
          else
            west init -m https://github.com/zmkfirmware/zmk . || true
          fi
          west update || true

      - name: Build firmware (generate autoconf)
        working-directory: .
        run: |
          echo "Building for board: ${{ matrix.board }}"
          # capture stdout/stderr to a log for debugging
          west build -b ${{ matrix.board }} -s . -d build-${{ matrix.board }} 2>&1 | tee build-${{ matrix.board }}.log || true

      - name: List build directory (for debugging)
        run: |
          echo "Listing build directory for ${{ matrix.board }}"
          ls -la build-${{ matrix.board }} || true
          ls -la build-${{ matrix.board }}/zephyr || true

      - name: Archive build directory
        run: |
          zip -r build-${{ matrix.board }}.zip build-${{ matrix.board }} || true

      - name: Upload build artifacts (autoconf + archive)
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.board }}-artifacts
          path: |
            build-${{ matrix.board }}/zephyr/include/generated/autoconf.h
            build-${{ matrix.board }}.zip
            build-${{ matrix.board }}.log
