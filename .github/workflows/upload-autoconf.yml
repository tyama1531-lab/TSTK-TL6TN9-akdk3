name: Upload autoconf artifacts

# Trigger automatically only when the Build ZMK firmware workflow completes,
# or when manually dispatched. Avoid running on raw push to prevent duplicate
# builds/artifacts.
on:
  workflow_run:
    workflows: ["Build ZMK firmware"]
    types: [completed]
  workflow_dispatch:

jobs:
  upload-autoconf:
    if: ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: ["tstk_tl6tn9_left", "tstk_tl6tn9_right"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Download artifacts from triggering run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ github.event.workflow_run.id }}
          REPO: ${{ github.repository }}
          OWNER: ${{ github.repository_owner }}
          BOARD: ${{ matrix.board }}
        run: |
          echo "Looking for artifacts for run $RUN_ID"
          API_URL="https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/artifacts"
          echo "Querying $API_URL"
          artifacts_json=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$API_URL")
          echo "$artifacts_json" | jq '.artifacts | length as $len | "Found: "+($len|tostring)' || true
          # Try to find artifact named autoconf-<board>
          target_name="autoconf-${{ matrix.board }}"
          artifact_id=$(echo "$artifacts_json" | jq -r --arg name "$target_name" '.artifacts[] | select(.name==$name) | .id' | head -n1)
          if [ -n "$artifact_id" ] && [ "$artifact_id" != "null" ]; then
            echo "Found artifact id $artifact_id for $target_name"
            dl_url="https://api.github.com/repos/$REPO/actions/artifacts/$artifact_id/zip"
            outfile="${target_name}.zip"
            curl -L -s -H "Authorization: token $GITHUB_TOKEN" -o "$outfile" "$dl_url"
            if [ -f "$outfile" ]; then
              unzip -o "$outfile" -d extracted || true
              ls -la extracted || true
            else
              echo "Download failed for $target_name"
            fi
          else
            echo "Artifact $target_name not found in run $RUN_ID"
          fi

      - name: Archive workspace (always include for debugging)
        run: |
          echo "Creating workspace-debug.zip (excludes .git)"
          zip -r workspace-debug.zip . -x ".git/*" || true

      - name: Upload autoconf.h
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: autoconf-${{ matrix.board }}
          path: |
            build-${{ matrix.board }}/zephyr/include/generated/autoconf.h
            build-${{ matrix.board }}-debug.zip
            workspace-debug.zip
            build-${{ matrix.board }}.log


